module("config_sdebug")
-- It is suggested you do NOT edit this file. That said, there may be 
-- circumstances where this is necessary for more extreme customization.
-- Tweaking anything here is not supported; if you break something, I can
-- probably not help you.

--- This sets the way that player IDs are found. They are:
-- NETWORK - Actually contacts the GBL server to request player information.
--           I implemented this before I even noticed you can pull
--           player IDs from the gamelib with "players". Silly me.
--           Warning: when I discovered I could do this locally, I dropped
--           my work on NETWORK support. It worked fine as far as I could
--           tell, but LOCAL is just plain simpler and more fool-proof.
--           Note that if you turned off GBL on your server, that this will
--           ignore that and still contact the GBL server itself.
--           Use this at your own risk.
--
-- LOCAL   - This just issues the "players" command and to pull player
--           IDs. I believe it is simply the superior solution. Note that if
--           you run a server with GBL turned off, that using LOCAL is perfectly
--           safe to use; it will just no longer be able to see player GBL IDs.
GBL_MODE = "LOCAL"

-------------------------------------------------------
-- If GBL_MODE="LOCAL", the following settings apply --
-------------------------------------------------------
--- This sets how often in seconds the "players" command should be issued
-- to update player ID information. 
GBL_LOCALUPDATERATE = 99999

---------------------------------------------------------
-- If GBL_MODE="NETWORK", the following settings apply --
---------------------------------------------------------
--- If this is false, the GBL server will not be used to authenticate users.
-- This only applies if GBL_MODE="NETWORK".
GBL_ENABLED = true

--- The hostname of the global login server.
-- This only applies if GBL_MODE="NETWORK".
GBL_SERVERHOST = "dplogin.com"

--- The port of the global login server.
-- This only applies if GBL_MODE="NETWORK".
GBL_SERVERPORT = 27900

--- The time in seconds that must elapse before another query can be made to
-- the GBL server. This only affects the queries we send out, but if it is
-- sufficiently high, it will prevent our own query from getting mixed in with
-- the one the game library sends, which can result in the client getting 
-- kicked for invalid login despite having a correct login. Be aware that
-- setting this value too low can make it easier for an erroneous kick,
-- but setting it too high will force either the game library or ironmod
-- to wait too long for the reply. Be aware that this can not stop network
-- related issues that may cause throttled GBL queries to still be sent together
-- (ie: really bad lag/packet loss from you to the GBL server).
-- This ONLY affects our sending of vninit, not the game library's. The
-- game library can still call two of them really fast and mess up (example:
-- switch really fast between two names you own on a server and watch
-- yourself get kicked for invalid login -- this is not ironmod's fault).
-- This only applies if GBL_MODE="NETWORK".
GBL_QUERYTHROTTLE = 5


-------------------------------------------------------
--                  Network settings                 --
-------------------------------------------------------
--- If true, the server plugin takes over all the functions that send things
-- to DP's network buffer (all Write* functions, plus unicast/multicast)
-- so that it can be used for its own purposes. This is required for GBL
-- login processing to function properly. The only current reason to turn it off
-- is for a marginal performance improvement (I got back 1-2% CPU on 1.4GHz, although
-- CPU usage will increase by an indeterminate amount as more players join) when 
-- you also have GBL off. If CPU use proves a problem, I may optimize it more 
-- or move the code from Lua to C. 
NET_FILTERBUFFER_ENABLED = false

--- This is used to avoid overflowing client(s) when we send them a lot of 
-- messages using printlineall/printlineclient. This is an approximate
-- threshold of just message characters that will force the remaining
-- message(s) to wait until the next GE_RUNFRAME (it excludes overhead of sending
-- the message, but that's only 2-3 bytes or so per message). This value shouldn't
-- need to be modified, but if you have serious problems with clients
-- getting overflowed by other plugins that spit out a ton of data, you might
-- try lowering this. Note that if a message needs to be sent out and it is
-- larger than this value, it will still be sent. This means you could set
-- this to 1 to force each message to fit into its own GE_RUNFRAME, but that
-- is not advisable. Setting it to a high value (1400+) effectively turns it off.
NET_SAFEPRINTLINE_MAXBYTES = 500

--- This is the maximum number of queued messages we will ever allow to be in
-- a single client's waiting message queue. It's here in case a plugin is pumping
-- more data to a client than can even be sent.
-- If the limit is met, then the message queue for the client is discarded
-- and they are told that they exceeded the limit.
NET_SAFEPRINTLINE_MAXQ = 100
